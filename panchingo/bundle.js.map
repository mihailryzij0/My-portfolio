{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://webpack-2/./node_modules/js-confetti/dist/es/index.js","webpack://webpack-2/./src/sum.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction normalizeComputedStyleValue(string) {\n  // \"250px\" --> 250\n  return +string.replace(/px/, '');\n}\n\nfunction fixDPR(canvas) {\n  var dpr = window.devicePixelRatio;\n  var computedStyles = getComputedStyle(canvas);\n  var width = normalizeComputedStyleValue(computedStyles.getPropertyValue('width'));\n  var height = normalizeComputedStyleValue(computedStyles.getPropertyValue('height'));\n  canvas.setAttribute('width', (width * dpr).toString());\n  canvas.setAttribute('height', (height * dpr).toString());\n}\n\nfunction generateRandomNumber(min, max) {\n  var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var randomNumber = Math.random() * (max - min) + min;\n  return Math.floor(randomNumber * Math.pow(10, fractionDigits)) / Math.pow(10, fractionDigits);\n}\n\nfunction generateRandomArrayElement(arr) {\n  return arr[generateRandomNumber(0, arr.length)];\n}\n\nvar FREE_FALLING_OBJECT_ACCELERATION = 0.00125;\nvar MIN_DRAG_FORCE_COEFFICIENT = 0.0005;\nvar MAX_DRAG_FORCE_COEFFICIENT = 0.0009;\nvar ROTATION_SLOWDOWN_ACCELERATION = 0.00001;\nvar INITIAL_SHAPE_RADIUS = 6;\nvar INITIAL_EMOJI_SIZE = 80;\nvar MIN_INITIAL_CONFETTI_SPEED = 0.9;\nvar MAX_INITIAL_CONFETTI_SPEED = 1.7;\nvar MIN_FINAL_X_CONFETTI_SPEED = 0.2;\nvar MAX_FINAL_X_CONFETTI_SPEED = 0.6;\nvar MIN_INITIAL_ROTATION_SPEED = 0.03;\nvar MAX_INITIAL_ROTATION_SPEED = 0.07;\nvar MIN_CONFETTI_ANGLE = 15;\nvar MAX_CONFETTI_ANGLE = 82;\nvar MAX_CONFETTI_POSITION_SHIFT = 150;\nvar SHAPE_VISIBILITY_TRESHOLD = 100;\nvar DEFAULT_CONFETTI_NUMBER = 250;\nvar DEFAULT_EMOJIS_NUMBER = 40;\nvar DEFAULT_CONFETTI_COLORS = ['#fcf403', '#62fc03', '#f4fc03', '#03e7fc', '#03fca5', '#a503fc', '#fc03ad', '#fc03c2'];\n\nfunction getWindowWidthCoefficient(canvasWidth) {\n  var HD_SCREEN_WIDTH = 1920;\n  return Math.log(canvasWidth) / Math.log(HD_SCREEN_WIDTH);\n}\n\nvar ConfettiShape = /*#__PURE__*/function () {\n  function ConfettiShape(args) {\n    _classCallCheck(this, ConfettiShape);\n\n    var initialPosition = args.initialPosition,\n        direction = args.direction,\n        confettiRadius = args.confettiRadius,\n        confettiColors = args.confettiColors,\n        emojis = args.emojis,\n        emojiSize = args.emojiSize,\n        canvasWidth = args.canvasWidth;\n    var randomConfettiSpeed = generateRandomNumber(MIN_INITIAL_CONFETTI_SPEED, MAX_INITIAL_CONFETTI_SPEED, 3);\n    var initialSpeed = randomConfettiSpeed * getWindowWidthCoefficient(canvasWidth);\n    this.confettiSpeed = {\n      x: initialSpeed,\n      y: initialSpeed\n    };\n    this.finalConfettiSpeedX = generateRandomNumber(MIN_FINAL_X_CONFETTI_SPEED, MAX_FINAL_X_CONFETTI_SPEED, 3);\n    this.rotationSpeed = emojis.length ? 0.01 : generateRandomNumber(MIN_INITIAL_ROTATION_SPEED, MAX_INITIAL_ROTATION_SPEED, 3) * getWindowWidthCoefficient(canvasWidth);\n    this.dragForceCoefficient = generateRandomNumber(MIN_DRAG_FORCE_COEFFICIENT, MAX_DRAG_FORCE_COEFFICIENT, 6);\n    this.radius = {\n      x: confettiRadius,\n      y: confettiRadius\n    };\n    this.initialRadius = confettiRadius;\n    this.rotationAngle = direction === 'left' ? generateRandomNumber(0, 0.2, 3) : generateRandomNumber(-0.2, 0, 3);\n    this.emojiSize = emojiSize;\n    this.emojiRotationAngle = generateRandomNumber(0, 2 * Math.PI);\n    this.radiusYUpdateDirection = 'down';\n    var angle = direction === 'left' ? generateRandomNumber(MAX_CONFETTI_ANGLE, MIN_CONFETTI_ANGLE) * Math.PI / 180 : generateRandomNumber(-MIN_CONFETTI_ANGLE, -MAX_CONFETTI_ANGLE) * Math.PI / 180;\n    this.absCos = Math.abs(Math.cos(angle));\n    this.absSin = Math.abs(Math.sin(angle));\n    var positionShift = generateRandomNumber(-MAX_CONFETTI_POSITION_SHIFT, 0);\n    var shiftedInitialPosition = {\n      x: initialPosition.x + (direction === 'left' ? -positionShift : positionShift) * this.absCos,\n      y: initialPosition.y - positionShift * this.absSin\n    };\n    this.currentPosition = Object.assign({}, shiftedInitialPosition);\n    this.initialPosition = Object.assign({}, shiftedInitialPosition);\n    this.color = emojis.length ? null : generateRandomArrayElement(confettiColors);\n    this.emoji = emojis.length ? generateRandomArrayElement(emojis) : null;\n    this.createdAt = new Date().getTime();\n    this.direction = direction;\n  }\n\n  _createClass(ConfettiShape, [{\n    key: \"draw\",\n    value: function draw(canvasContext) {\n      var currentPosition = this.currentPosition,\n          radius = this.radius,\n          color = this.color,\n          emoji = this.emoji,\n          rotationAngle = this.rotationAngle,\n          emojiRotationAngle = this.emojiRotationAngle,\n          emojiSize = this.emojiSize;\n      var dpr = window.devicePixelRatio;\n\n      if (color) {\n        canvasContext.fillStyle = color;\n        canvasContext.beginPath();\n        canvasContext.ellipse(currentPosition.x * dpr, currentPosition.y * dpr, radius.x * dpr, radius.y * dpr, rotationAngle, 0, 2 * Math.PI);\n        canvasContext.fill();\n      } else if (emoji) {\n        canvasContext.font = \"\".concat(emojiSize, \"px serif\");\n        canvasContext.save();\n        canvasContext.translate(dpr * currentPosition.x, dpr * currentPosition.y);\n        canvasContext.rotate(emojiRotationAngle);\n        canvasContext.textAlign = 'center';\n        canvasContext.fillText(emoji, 0, 0);\n        canvasContext.restore();\n      }\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(iterationTimeDelta, currentTime) {\n      var confettiSpeed = this.confettiSpeed,\n          dragForceCoefficient = this.dragForceCoefficient,\n          finalConfettiSpeedX = this.finalConfettiSpeedX,\n          radiusYUpdateDirection = this.radiusYUpdateDirection,\n          rotationSpeed = this.rotationSpeed,\n          createdAt = this.createdAt,\n          direction = this.direction;\n      var timeDeltaSinceCreation = currentTime - createdAt;\n      if (confettiSpeed.x > finalConfettiSpeedX) this.confettiSpeed.x -= dragForceCoefficient * iterationTimeDelta;\n      this.currentPosition.x += confettiSpeed.x * (direction === 'left' ? -this.absCos : this.absCos) * iterationTimeDelta;\n      this.currentPosition.y = this.initialPosition.y - confettiSpeed.y * this.absSin * timeDeltaSinceCreation + FREE_FALLING_OBJECT_ACCELERATION * Math.pow(timeDeltaSinceCreation, 2) / 2;\n      this.rotationSpeed -= this.emoji ? 0.0001 : ROTATION_SLOWDOWN_ACCELERATION * iterationTimeDelta;\n      if (this.rotationSpeed < 0) this.rotationSpeed = 0; // no need to update rotation radius for emoji\n\n      if (this.emoji) {\n        this.emojiRotationAngle += this.rotationSpeed * iterationTimeDelta % (2 * Math.PI);\n        return;\n      }\n\n      if (radiusYUpdateDirection === 'down') {\n        this.radius.y -= iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y <= 0) {\n          this.radius.y = 0;\n          this.radiusYUpdateDirection = 'up';\n        }\n      } else {\n        this.radius.y += iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y >= this.initialRadius) {\n          this.radius.y = this.initialRadius;\n          this.radiusYUpdateDirection = 'down';\n        }\n      }\n    }\n  }, {\n    key: \"getIsVisibleOnCanvas\",\n    value: function getIsVisibleOnCanvas(canvasHeight) {\n      return this.currentPosition.y < canvasHeight + SHAPE_VISIBILITY_TRESHOLD;\n    }\n  }]);\n\n  return ConfettiShape;\n}();\n\nfunction createCanvas() {\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'fixed';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '1000';\n  canvas.style.pointerEvents = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\n\nfunction normalizeConfettiConfig(confettiConfig) {\n  var _confettiConfig$confe = confettiConfig.confettiRadius,\n      confettiRadius = _confettiConfig$confe === void 0 ? INITIAL_SHAPE_RADIUS : _confettiConfig$confe,\n      _confettiConfig$confe2 = confettiConfig.confettiNumber,\n      confettiNumber = _confettiConfig$confe2 === void 0 ? confettiConfig.confettiesNumber || (confettiConfig.emojis ? DEFAULT_EMOJIS_NUMBER : DEFAULT_CONFETTI_NUMBER) : _confettiConfig$confe2,\n      _confettiConfig$confe3 = confettiConfig.confettiColors,\n      confettiColors = _confettiConfig$confe3 === void 0 ? DEFAULT_CONFETTI_COLORS : _confettiConfig$confe3,\n      _confettiConfig$emoji = confettiConfig.emojis,\n      emojis = _confettiConfig$emoji === void 0 ? confettiConfig.emojies || [] : _confettiConfig$emoji,\n      _confettiConfig$emoji2 = confettiConfig.emojiSize,\n      emojiSize = _confettiConfig$emoji2 === void 0 ? INITIAL_EMOJI_SIZE : _confettiConfig$emoji2; // deprecate wrong plural forms, used in early releases\n\n  if (confettiConfig.emojies) console.error(\"emojies argument is deprecated, please use emojis instead\");\n  if (confettiConfig.confettiesNumber) console.error(\"confettiesNumber argument is deprecated, please use confettiNumber instead\");\n  return {\n    confettiRadius: confettiRadius,\n    confettiNumber: confettiNumber,\n    confettiColors: confettiColors,\n    emojis: emojis,\n    emojiSize: emojiSize\n  };\n}\n\nvar ConfettiBatch = /*#__PURE__*/function () {\n  function ConfettiBatch(canvasContext) {\n    var _this = this;\n\n    _classCallCheck(this, ConfettiBatch);\n\n    this.canvasContext = canvasContext;\n    this.shapes = [];\n    this.promise = new Promise(function (completionCallback) {\n      return _this.resolvePromise = completionCallback;\n    });\n  }\n\n  _createClass(ConfettiBatch, [{\n    key: \"getBatchCompletePromise\",\n    value: function getBatchCompletePromise() {\n      return this.promise;\n    }\n  }, {\n    key: \"addShapes\",\n    value: function addShapes() {\n      var _this$shapes;\n\n      (_this$shapes = this.shapes).push.apply(_this$shapes, arguments);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a;\n\n      if (this.shapes.length) {\n        return false;\n      }\n\n      (_a = this.resolvePromise) === null || _a === void 0 ? void 0 : _a.call(this);\n      return true;\n    }\n  }, {\n    key: \"processShapes\",\n    value: function processShapes(time, canvasHeight, cleanupInvisibleShapes) {\n      var _this2 = this;\n\n      var timeDelta = time.timeDelta,\n          currentTime = time.currentTime;\n      this.shapes = this.shapes.filter(function (shape) {\n        // Render the shapes in this batch\n        shape.updatePosition(timeDelta, currentTime);\n        shape.draw(_this2.canvasContext); // Only cleanup the shapes if we're being asked to\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return shape.getIsVisibleOnCanvas(canvasHeight);\n      });\n    }\n  }]);\n\n  return ConfettiBatch;\n}();\n\nvar JSConfetti = /*#__PURE__*/function () {\n  function JSConfetti() {\n    var jsConfettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, JSConfetti);\n\n    this.activeConfettiBatches = [];\n    this.canvas = jsConfettiConfig.canvas || createCanvas();\n    this.canvasContext = this.canvas.getContext('2d');\n    this.requestAnimationFrameRequested = false;\n    this.lastUpdated = new Date().getTime();\n    this.iterationIndex = 0;\n    this.loop = this.loop.bind(this);\n    requestAnimationFrame(this.loop);\n  }\n\n  _createClass(JSConfetti, [{\n    key: \"loop\",\n    value: function loop() {\n      this.requestAnimationFrameRequested = false;\n      fixDPR(this.canvas);\n      var currentTime = new Date().getTime();\n      var timeDelta = currentTime - this.lastUpdated;\n      var canvasHeight = this.canvas.offsetHeight;\n      var cleanupInvisibleShapes = this.iterationIndex % 10 === 0;\n      this.activeConfettiBatches = this.activeConfettiBatches.filter(function (batch) {\n        batch.processShapes({\n          timeDelta: timeDelta,\n          currentTime: currentTime\n        }, canvasHeight, cleanupInvisibleShapes); // Do not remove invisible shapes on every iteration\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return !batch.complete();\n      });\n      this.iterationIndex++;\n      this.queueAnimationFrameIfNeeded(currentTime);\n    }\n  }, {\n    key: \"queueAnimationFrameIfNeeded\",\n    value: function queueAnimationFrameIfNeeded(currentTime) {\n      if (this.requestAnimationFrameRequested) {\n        // We already have a pended animation frame, so there is no more work\n        return;\n      }\n\n      if (this.activeConfettiBatches.length < 1) {\n        // No shapes to animate, so don't queue another frame\n        return;\n      }\n\n      this.requestAnimationFrameRequested = true; // Capture the last updated time for animation\n\n      this.lastUpdated = currentTime || new Date().getTime();\n      requestAnimationFrame(this.loop);\n    }\n  }, {\n    key: \"addConfetti\",\n    value: function addConfetti() {\n      var confettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _normalizeConfettiCon = normalizeConfettiConfig(confettiConfig),\n          confettiRadius = _normalizeConfettiCon.confettiRadius,\n          confettiNumber = _normalizeConfettiCon.confettiNumber,\n          confettiColors = _normalizeConfettiCon.confettiColors,\n          emojis = _normalizeConfettiCon.emojis,\n          emojiSize = _normalizeConfettiCon.emojiSize; // Use the bounding rect rather tahn the canvas width / height, because\n      // .width / .height are unset until a layout pass has been completed. Upon\n      // confetti being immediately queued on a page load, this hasn't happened so\n      // the default of 300x150 will be returned, causing an improper source point\n      // for the confetti animation.\n\n\n      var canvasRect = this.canvas.getBoundingClientRect();\n      var canvasWidth = canvasRect.width;\n      var canvasHeight = canvasRect.height;\n      var yPosition = canvasHeight * 5 / 7;\n      var leftConfettiPosition = {\n        x: 0,\n        y: yPosition\n      };\n      var rightConfettiPosition = {\n        x: canvasWidth,\n        y: yPosition\n      };\n      var confettiGroup = new ConfettiBatch(this.canvasContext);\n\n      for (var i = 0; i < confettiNumber / 2; i++) {\n        var confettiOnTheRight = new ConfettiShape({\n          initialPosition: leftConfettiPosition,\n          direction: 'right',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        var confettiOnTheLeft = new ConfettiShape({\n          initialPosition: rightConfettiPosition,\n          direction: 'left',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        confettiGroup.addShapes(confettiOnTheRight, confettiOnTheLeft);\n      }\n\n      this.activeConfettiBatches.push(confettiGroup);\n      this.queueAnimationFrameIfNeeded();\n      return confettiGroup.getBatchCompletePromise();\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this.activeConfettiBatches = [];\n    }\n  }]);\n\n  return JSConfetti;\n}();\n\nexport default JSConfetti;\n","import \"./style/style.css\";\nimport JSConfetti from 'js-confetti'\n\nwindow.onload=function() {\n  document.querySelector('.loading-mask').style.display='none';\n  const jsConfetti = new JSConfetti()\n  jsConfetti.addConfetti()\n}\n\n  const surprize = [\n\n    {\n      text:'Повезет в следующий раз.',\n      img: './image/wanga.png'\n    },\n    {\n      text:'Вы выиграли пуно-пан при покупке от 300 рублей',\n      img: './image/punopan.png'\n    },\n    {\n      text:'Повезет в следующий раз.',\n      img: './image/wanga.png'\n    },\n    {\n      text:'Вы выиграли пан-чинго при покупке от 200 рублей',\n      img: './image/panchingo.png'\n    },    {\n      text:'Вы выиграли бонзуке-со при покупке от 400 рублей',\n      img: './image/sosiskavteste.png'\n    },\n    {\n      text:'Вы выиграли пан-чинго при покупке от 200 рублей',\n      img: './image/panchingo.png'\n    },\n    {\n      text:'Вы выиграли пуно-пан при покупке от 300 рублей',\n      img: './image/punopan.png'\n    },\n    {\n      text:'Повезет в следующий раз.',\n      img: './image/wanga.png'\n    },\n    {\n      text:'Вы выиграли пан-чинго при покупке от 200 рублей',\n      img: './image/panchingo.png'\n    },\n    {\n      text:'Вы выиграли пуно-пан при покупке от 300 рублей',\n      img: './image/punopan.png'\n    },\n  ]\n  \n  let surprice = document.querySelector('.surprice')\n  const surpriceData = document.querySelector('.surprice-data')\n  let surprizeImg = document.querySelector('.surprice-img')\n\n  let objectSurprize = {\n    times:'',\n    surprize:'',\n    img:''\n    \n  }\n  \n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  \n  function createSurprize(){\n    const storageDataJson =  localStorage.getItem('surprizeData')\n    \n    const newData = new Date().toLocaleDateString()\n\n    if(storageDataJson && JSON.parse(storageDataJson).times == newData){\n      const storageData = JSON.parse(storageDataJson)\n      surprice.textContent =storageData.surprize\n      surpriceData.textContent = storageData.times.split(',')[0]\n      surprizeImg.src = storageData.img\n    }else{\n      const rondom = getRandomInt(1, 10);\n      objectSurprize.surprize = surprize[rondom].text\n      objectSurprize.img = surprize[rondom].img\n      objectSurprize.times = newData\n      localStorage.setItem('surprizeData', JSON.stringify(objectSurprize))\n      surprice.textContent = surprize[rondom].text\n      surpriceData.textContent = newData;\n      surprizeImg.src = surprize[rondom].img\n    }\n  }\n  createSurprize();\n\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","normalizeComputedStyleValue","string","replace","generateRandomNumber","min","max","fractionDigits","arguments","undefined","randomNumber","Math","random","floor","pow","generateRandomArrayElement","arr","DEFAULT_CONFETTI_COLORS","getWindowWidthCoefficient","canvasWidth","log","ConfettiShape","args","this","initialPosition","direction","confettiRadius","confettiColors","emojis","emojiSize","initialSpeed","confettiSpeed","x","y","finalConfettiSpeedX","rotationSpeed","dragForceCoefficient","radius","initialRadius","rotationAngle","emojiRotationAngle","PI","radiusYUpdateDirection","angle","absCos","abs","cos","absSin","sin","positionShift","shiftedInitialPosition","currentPosition","assign","color","emoji","createdAt","Date","getTime","value","canvasContext","dpr","window","devicePixelRatio","fillStyle","beginPath","ellipse","fill","font","concat","save","translate","rotate","textAlign","fillText","restore","iterationTimeDelta","currentTime","timeDeltaSinceCreation","canvasHeight","createCanvas","canvas","document","createElement","style","position","width","height","top","left","zIndex","pointerEvents","body","appendChild","normalizeConfettiConfig","confettiConfig","_confettiConfig$confe","_confettiConfig$confe2","confettiNumber","confettiesNumber","_confettiConfig$confe3","_confettiConfig$emoji","emojies","_confettiConfig$emoji2","console","error","ConfettiBatch","_this","shapes","promise","Promise","completionCallback","resolvePromise","_this$shapes","push","apply","_a","call","time","cleanupInvisibleShapes","_this2","timeDelta","filter","shape","updatePosition","draw","getIsVisibleOnCanvas","JSConfetti","jsConfettiConfig","activeConfettiBatches","getContext","requestAnimationFrameRequested","lastUpdated","iterationIndex","loop","bind","requestAnimationFrame","computedStyles","getComputedStyle","getPropertyValue","setAttribute","toString","offsetHeight","batch","processShapes","complete","queueAnimationFrameIfNeeded","_normalizeConfettiCon","canvasRect","getBoundingClientRect","yPosition","leftConfettiPosition","rightConfettiPosition","confettiGroup","confettiOnTheRight","confettiOnTheLeft","addShapes","getBatchCompletePromise","onload","querySelector","display","addConfetti","surprize","text","img","surprice","surpriceData","surprizeImg","objectSurprize","times","storageDataJson","localStorage","getItem","newData","toLocaleDateString","JSON","parse","storageData","textContent","split","src","rondom","setItem","stringify","createSurprize"],"sourceRoot":""}